// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prefeitura.Persistencia;

namespace Prefeitura.Persistencia.Migrations
{
    [DbContext(typeof(ContextoPrefeituraMigrations))]
    partial class ContextoPrefeituraMigrationsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraDisponivelFinal")
                        .HasColumnName("DATAHORADISPONIVELFINAL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraDisponivelInicial")
                        .HasColumnName("DATAHORADISPONIVELINICIAL")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOS");

                    b.ToTable("AGENDAMENTOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamento")
                        .HasColumnName("IDAGENDAMENTO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOHISTORICOS");

                    b.HasIndex("IdAgendamento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AGENDAMENTOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraAgendamento")
                        .HasColumnName("DATAHORAAGENDAMENTO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamento")
                        .HasColumnName("IDAGENDAMENTO")
                        .HasColumnType("int");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("OBSERVACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Preferencial")
                        .HasColumnName("PREFERENCIAL")
                        .HasColumnType("bit");

                    b.Property<int>("Senha")
                        .HasColumnName("SENHA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOSOLICITACAO");

                    b.HasIndex("IdAgendamento");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("AGENDAMENTOSOLICITACAO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoSolicitacaoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamentoSolicitacao")
                        .HasColumnName("IDAGENDAMENTOSOLICITACAO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOSOLICITACAOHISTORICOS");

                    b.HasIndex("IdAgendamentoSolicitacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AGENDAMENTOSOLICITACAOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .HasColumnName("CONTEUDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_COMENTARIOS");

                    b.HasIndex("IdNoticia");

                    b.ToTable("COMENTARIOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConteudoHtml")
                        .HasColumnName("CONTEUDOHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAS");

                    b.ToTable("NOTICIAS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAutor")
                        .HasColumnName("IDAUTOR")
                        .HasColumnType("int");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAAUTORES");

                    b.HasIndex("IdAutor");

                    b.HasIndex("IdNoticia");

                    b.ToTable("NOTICIAAUTORES");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaCidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIACIDADES");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdNoticia");

                    b.ToTable("NOTICIACIDADES");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAHISTORICO");

                    b.HasIndex("IdNoticia");

                    b.HasIndex("IdUsuario");

                    b.ToTable("NOTICIAHISTORICO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<int>("IdTag")
                        .HasColumnName("IDTAG")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIATAG");

                    b.HasIndex("IdNoticia");

                    b.HasIndex("IdTag");

                    b.ToTable("NOTICIATAG");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTag")
                        .HasColumnName("NOMETAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_TAGS");

                    b.ToTable("TAGS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Visualizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_VISUALIZACAO");

                    b.HasIndex("IdNoticia");

                    b.ToTable("VISUALIZACAO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnName("IDUNIDADEFEDERATIVA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CIDADE");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("CIDADE");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Contratacao")
                        .HasColumnName("CONTRATACAO")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOS");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("FUNCIONARIOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.FuncionarioHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOHISTORICOS");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("FUNCIONARIOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.Holerite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Arquivo")
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnName("DATAHORACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOHOLERITES");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("FUNCIONARIOHOLERITES");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.PontoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnName("DATAHORACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOPONTOREGISTROS");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("FUNCIONARIOPONTOREGISTROS");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("DATANASCIMENTO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .HasColumnName("DOCUMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_PESSOA");

                    b.ToTable("PESSOA");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("CONCURRENCYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnName("NORMALIZEDNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_ROLE");

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.ConsultaAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataHoraFinal")
                        .HasColumnName("DATAHORAFINAL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraInicial")
                        .HasColumnName("DATAHORAINICIAL")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdHospital")
                        .HasColumnName("IDHOSPITAL")
                        .HasColumnType("int");

                    b.Property<int>("IdMedico")
                        .HasColumnName("IDMEDICO")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CONSULTAATENDIMENTO");

                    b.HasIndex("IdHospital");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPessoa");

                    b.ToTable("CONSULTAATENDIMENTO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.ConsultaAtendimentoSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdConsultaAtendimento")
                        .HasColumnName("IDCONSULTAATENDIMENTO")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("OBSERVACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_CONSULTAATENDIMENTOSAIDA");

                    b.HasIndex("IdConsultaAtendimento");

                    b.ToTable("CONSULTAATENDIMENTOSAIDA");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<string>("NomeHospital")
                        .HasColumnName("NOMEHOSPITAL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_HOSPITAL");

                    b.HasIndex("IdCidade");

                    b.ToTable("HOSPITAL");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Crm")
                        .HasColumnName("CRM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_MEDICO");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("MEDICO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Suporte.SuporteSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Solicitacao")
                        .HasColumnName("SOLICITACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnName("TELEFONE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_SUPORTESOLICITACOES");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("SUPORTESOLICITACOES");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.UnidadeFederativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sigla")
                        .HasColumnName("SIGLA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_UNIDADEFEDERATIVA");

                    b.ToTable("UNIDADEFEDERATIVA");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("ACCESSFAILEDCOUNT")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("CONCURRENCYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DATACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("EMAILCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("LOCKOUTENABLED")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("LOCKOUTEND")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("NORMALIZEDEMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("NORMALIZEDUSERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PASSWORDHASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONENUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("PHONENUMBERCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("SECURITYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("TWOFACTORENABLED")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnName("USERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_USUARIO");

                    b.HasIndex("IdPessoa");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.UsuarioRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("USERID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnName("ROLEID")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_USUARIOROLE");

                    b.HasIndex("RoleId");

                    b.ToTable("USUARIOROLE");
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoHistorico", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Agendamentos.Agendamento", "Agendamento")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdAgendamento")
                        .HasConstraintName("FK_AGENDAMENTOHISTORICOS_AGENDAMENTOS_IDAGENDAMENTO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AGENDAMENTOHISTORICOS_USUARIO_IDUSUARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoSolicitacao", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Agendamentos.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("IdAgendamento")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_AGENDAMENTOS_IDAGENDAMENTO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_PESSOA_IDPESSOA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoSolicitacaoHistorico", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Agendamentos.AgendamentoSolicitacao", "Solicitacao")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdAgendamentoSolicitacao")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAOHISTORICOS_AGENDAMENTOSOLICITACAO_IDAGENDAMENTOSOLICITACAO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAOHISTORICOS_USUARIO_IDUSUARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Comentario", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaComentario")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_COMENTARIOS_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaAutor", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Autor")
                        .WithMany()
                        .HasForeignKey("IdAutor")
                        .HasConstraintName("FK_NOTICIAAUTORES_PESSOA_IDAUTOR")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaAutor")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIAAUTORES_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaCidade", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_NOTICIACIDADES_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaCidade")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIACIDADES_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaHistorico", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIAHISTORICO_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_NOTICIAHISTORICO_USUARIO_IDUSUARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.NoticiaTag", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaNoticiaTag")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIATAG_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Tag", "Tag")
                        .WithMany("ListaNoticiaTag")
                        .HasForeignKey("IdTag")
                        .HasConstraintName("FK_NOTICIATAG_TAGS_IDTAG")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Blog.Visualizacao", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaVisualizacao")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_VISUALIZACAO_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Cidade", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.UnidadeFederativa", "UnidadeFederativa")
                        .WithMany("ListaCidade")
                        .HasForeignKey("IdUnidadeFederativa")
                        .HasConstraintName("FK_CIDADE_UNIDADEFEDERATIVA_IDUNIDADEFEDERATIVA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_FUNCIONARIOS_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_FUNCIONARIOS_PESSOA_IDPESSOA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.FuncionarioHistorico", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOHISTORICOS_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_FUNCIONARIOHISTORICOS_USUARIO_IDUSUARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.Holerite", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaHolerite")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOHOLERITES_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Financeiro.PontoRegistro", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaPontoRegistro")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOPONTOREGISTROS_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.ConsultaAtendimento", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Saude.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("IdHospital")
                        .HasConstraintName("FK_CONSULTAATENDIMENTO_HOSPITAL_IDHOSPITAL")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Saude.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .HasConstraintName("FK_CONSULTAATENDIMENTO_MEDICO_IDMEDICO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_CONSULTAATENDIMENTO_PESSOA_IDPESSOA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.ConsultaAtendimentoSaida", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Saude.ConsultaAtendimento", "ConsultaAtendimento")
                        .WithMany("ListaConsultaAtendimentoSaida")
                        .HasForeignKey("IdConsultaAtendimento")
                        .HasConstraintName("FK_CONSULTAATENDIMENTOSAIDA_CONSULTAATENDIMENTO_IDCONSULTAATENDIMENTO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.Hospital", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_HOSPITAL_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Saude.Medico", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_MEDICO_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Suporte.SuporteSolicitacao", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_SUPORTESOLICITACOES_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_SUPORTESOLICITACOES_PESSOA_IDPESSOA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.Usuario", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_USUARIO_PESSOA_IDPESSOA")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Negocio.Dominio.UsuarioRole", b =>
                {
                    b.HasOne("Prefeitura.Negocio.Dominio.Role", "Role")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_USUARIOROLE_ROLE_ROLEID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Prefeitura.Negocio.Dominio.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_USUARIOROLE_USUARIO_USERID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
