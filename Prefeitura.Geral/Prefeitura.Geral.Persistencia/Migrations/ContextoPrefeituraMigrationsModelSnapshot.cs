// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prefeitura.Geral.Persistencia;

namespace Prefeitura.Geral.Persistencia.Migrations
{
    [DbContext(typeof(ContextoPrefeituraMigrations))]
    partial class ContextoPrefeituraMigrationsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("CLAIMTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("CLAIMVALUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnName("ROLEID")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ASPNETROLECLAIMS");

                    b.HasIndex("RoleId");

                    b.ToTable("ASPNETROLECLAIMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("CLAIMTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("CLAIMVALUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("USERID")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ASPNETUSERCLAIMS");

                    b.HasIndex("UserId");

                    b.ToTable("ASPNETUSERCLAIMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnName("LOGINPROVIDER")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnName("PROVIDERKEY")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnName("PROVIDERDISPLAYNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("USERID")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("PK_ASPNETUSERLOGINS");

                    b.HasIndex("UserId");

                    b.ToTable("ASPNETUSERLOGINS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("USERID")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("LOGINPROVIDER")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("VALUE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("PK_ASPNETUSERTOKENS");

                    b.ToTable("ASPNETUSERTOKENS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraDisponivelFinal")
                        .HasColumnName("DATAHORADISPONIVELFINAL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraDisponivelInicial")
                        .HasColumnName("DATAHORADISPONIVELINICIAL")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOS");

                    b.ToTable("AGENDAMENTOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataHoraDisponivelFinal = new DateTime(2021, 1, 31, 22, 53, 31, 448, DateTimeKind.Local).AddTicks(7669),
                            DataHoraDisponivelInicial = new DateTime(2021, 1, 31, 19, 53, 31, 447, DateTimeKind.Local).AddTicks(1942),
                            Descricao = "Solicitar carteira de trabalho"
                        },
                        new
                        {
                            Id = 2,
                            DataHoraDisponivelFinal = new DateTime(2021, 1, 31, 22, 53, 31, 449, DateTimeKind.Local).AddTicks(1851),
                            DataHoraDisponivelInicial = new DateTime(2021, 1, 31, 19, 53, 31, 449, DateTimeKind.Local).AddTicks(1837),
                            Descricao = "Minha casa minha vida"
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamento")
                        .HasColumnName("IDAGENDAMENTO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOHISTORICOS");

                    b.HasIndex("IdAgendamento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AGENDAMENTOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraAgendamento")
                        .HasColumnName("DATAHORAAGENDAMENTO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamento")
                        .HasColumnName("IDAGENDAMENTO")
                        .HasColumnType("int");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("OBSERVACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Preferencial")
                        .HasColumnName("PREFERENCIAL")
                        .HasColumnType("bit");

                    b.Property<int>("Senha")
                        .HasColumnName("SENHA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOSOLICITACAO");

                    b.HasIndex("IdAgendamento");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("AGENDAMENTOSOLICITACAO");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoSolicitacaoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgendamentoSolicitacao")
                        .HasColumnName("IDAGENDAMENTOSOLICITACAO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAMENTOSOLICITACAOHISTORICOS");

                    b.HasIndex("IdAgendamentoSolicitacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AGENDAMENTOSOLICITACAOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .HasColumnName("CONTEUDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_COMENTARIOS");

                    b.HasIndex("IdNoticia");

                    b.ToTable("COMENTARIOS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConteudoHtml")
                        .HasColumnName("CONTEUDOHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DATACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAS");

                    b.ToTable("NOTICIAS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAutor")
                        .HasColumnName("IDAUTOR")
                        .HasColumnType("int");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAAUTORES");

                    b.HasIndex("IdAutor");

                    b.HasIndex("IdNoticia");

                    b.ToTable("NOTICIAAUTORES");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaCidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIACIDADES");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdNoticia");

                    b.ToTable("NOTICIACIDADES");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIAHISTORICO");

                    b.HasIndex("IdNoticia");

                    b.HasIndex("IdUsuario");

                    b.ToTable("NOTICIAHISTORICO");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.Property<int>("IdTag")
                        .HasColumnName("IDTAG")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NOTICIATAG");

                    b.HasIndex("IdNoticia");

                    b.HasIndex("IdTag");

                    b.ToTable("NOTICIATAG");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTag")
                        .HasColumnName("NOMETAG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_TAGS");

                    b.ToTable("TAGS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Visualizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNoticia")
                        .HasColumnName("IDNOTICIA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_VISUALIZACAO");

                    b.HasIndex("IdNoticia");

                    b.ToTable("VISUALIZACAO");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUnidadeFederativa")
                        .HasColumnName("IDUNIDADEFEDERATIVA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CIDADE");

                    b.HasIndex("IdUnidadeFederativa");

                    b.ToTable("CIDADE");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "BAURU",
                            IdUnidadeFederativa = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "BELO HORIZONTE",
                            IdUnidadeFederativa = 2
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Contratacao")
                        .HasColumnName("CONTRATACAO")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOS");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("FUNCIONARIOS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.FuncionarioHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnName("DATAHORA")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("IDUSUARIO")
                        .HasColumnType("int");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOHISTORICOS");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("FUNCIONARIOHISTORICOS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.Holerite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Arquivo")
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnName("DATAHORACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOHOLERITES");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("FUNCIONARIOHOLERITES");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.PontoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnName("DATAHORACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnName("IDFUNCIONARIO")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FUNCIONARIOPONTOREGISTROS");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("FUNCIONARIOPONTOREGISTROS");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("DATANASCIMENTO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .HasColumnName("DOCUMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_PESSOAS");

                    b.ToTable("PESSOAS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataNascimento = new DateTime(2001, 1, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            Documento = "43553936827",
                            Nome = "Admin"
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("CONCURRENCYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnName("NORMALIZEDNAME")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("PK_ASPNETROLES");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NORMALIZEDNAME] IS NOT NULL");

                    b.ToTable("ASPNETROLES");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "0ac6fc09-1661-43c6-a811-08bc8237f418",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Suporte.SuporteSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCidade")
                        .HasColumnName("IDCIDADE")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Solicitacao")
                        .HasColumnName("SOLICITACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnName("TELEFONE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_SUPORTESOLICITACOES");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdPessoa");

                    b.ToTable("SUPORTESOLICITACOES");
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.UnidadeFederativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sigla")
                        .HasColumnName("SIGLA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_UNIDADEFEDERATIVA");

                    b.ToTable("UNIDADEFEDERATIVA");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = 2,
                            Sigla = "SP"
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("ACCESSFAILEDCOUNT")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("CONCURRENCYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DATACADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("EMAILCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("IDPESSOA")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("LOCKOUTENABLED")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("LOCKOUTEND")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("NORMALIZEDEMAIL")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("NORMALIZEDUSERNAME")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PASSWORDHASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONENUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("PHONENUMBERCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("SECURITYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("TWOFACTORENABLED")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnName("USERNAME")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("PK_ASPNETUSERS");

                    b.HasIndex("IdPessoa");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NORMALIZEDUSERNAME] IS NOT NULL");

                    b.ToTable("ASPNETUSERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Ativo = true,
                            ConcurrencyStamp = "c8554266-b401-4519-9aeb-a9283053fc58",
                            DataCadastro = new DateTime(2021, 1, 31, 19, 53, 31, 450, DateTimeKind.Local).AddTicks(8875),
                            Email = "admin@sgm.com.br",
                            EmailConfirmed = true,
                            IdPessoa = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "MYEMAIL@MYEMAIL.COM",
                            NormalizedUserName = "MYEMAIL@MYEMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPIj4kbgp/t3Eg+g6zb4DPItimuGJVVKKzF7ifBO4by+oekl4DybdP9TERVZpkHk1A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "admin@sgm.com.br"
                        });
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.UsuarioRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("USERID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnName("ROLEID")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_ASPNETUSERROLES");

                    b.HasIndex("RoleId");

                    b.ToTable("ASPNETUSERROLES");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_ASPNETROLECLAIMS_ASPNETROLES_ROLEID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ASPNETUSERCLAIMS_ASPNETUSERS_USERID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ASPNETUSERLOGINS_ASPNETUSERS_USERID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ASPNETUSERTOKENS_ASPNETUSERS_USERID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoHistorico", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Agendamentos.Agendamento", "Agendamento")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdAgendamento")
                        .HasConstraintName("FK_AGENDAMENTOHISTORICOS_AGENDAMENTOS_IDAGENDAMENTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AGENDAMENTOHISTORICOS_ASPNETUSERS_IDUSUARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoSolicitacao", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Agendamentos.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("IdAgendamento")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_AGENDAMENTOS_IDAGENDAMENTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAO_PESSOAS_IDPESSOA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoSolicitacaoHistorico", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Agendamentos.AgendamentoSolicitacao", "Solicitacao")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdAgendamentoSolicitacao")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAOHISTORICOS_AGENDAMENTOSOLICITACAO_IDAGENDAMENTOSOLICITACAO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_AGENDAMENTOSOLICITACAOHISTORICOS_ASPNETUSERS_IDUSUARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Comentario", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaComentario")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_COMENTARIOS_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaAutor", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Pessoa", "Autor")
                        .WithMany()
                        .HasForeignKey("IdAutor")
                        .HasConstraintName("FK_NOTICIAAUTORES_PESSOAS_IDAUTOR")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaAutor")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIAAUTORES_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaCidade", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_NOTICIACIDADES_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaCidade")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIACIDADES_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaHistorico", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIAHISTORICO_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_NOTICIAHISTORICO_ASPNETUSERS_IDUSUARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.NoticiaTag", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaNoticiaTag")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_NOTICIATAG_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Tag", "Tag")
                        .WithMany("ListaNoticiaTag")
                        .HasForeignKey("IdTag")
                        .HasConstraintName("FK_NOTICIATAG_TAGS_IDTAG")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Blog.Visualizacao", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Blog.Noticia", "Noticia")
                        .WithMany("ListaVisualizacao")
                        .HasForeignKey("IdNoticia")
                        .HasConstraintName("FK_VISUALIZACAO_NOTICIAS_IDNOTICIA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Cidade", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.UnidadeFederativa", "UnidadeFederativa")
                        .WithMany("ListaCidade")
                        .HasForeignKey("IdUnidadeFederativa")
                        .HasConstraintName("FK_CIDADE_UNIDADEFEDERATIVA_IDUNIDADEFEDERATIVA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.Funcionario", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_FUNCIONARIOS_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_FUNCIONARIOS_PESSOAS_IDPESSOA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.FuncionarioHistorico", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaHistorico")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOHISTORICOS_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_FUNCIONARIOHISTORICOS_ASPNETUSERS_IDUSUARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.Holerite", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaHolerite")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOHOLERITES_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Financeiro.PontoRegistro", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Financeiro.Funcionario", "Funcionario")
                        .WithMany("ListaPontoRegistro")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_FUNCIONARIOPONTOREGISTROS_FUNCIONARIOS_IDFUNCIONARIO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Suporte.SuporteSolicitacao", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK_SUPORTESOLICITACOES_CIDADE_IDCIDADE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_SUPORTESOLICITACOES_PESSOAS_IDPESSOA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.Usuario", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ASPNETUSERS_PESSOAS_IDPESSOA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Prefeitura.Geral.Dominio.Dominio.UsuarioRole", b =>
                {
                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Role", "Role")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_ASPNETUSERROLES_ASPNETROLES_ROLEID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prefeitura.Geral.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ASPNETUSERROLES_ASPNETUSERS_USERID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
